plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
	// Quilt mappings
	id 'org.quiltmc.quilt-mappings-on-loom' version '3.1.1'
	// Quiltflower for decompiling Minecraft
	id 'io.github.juuxel.loom-quiltflower-mini' version '1.1.0'
}

apply from: 'https://gitlab.com/supersaiyansubtlety/mod_gradle_scripts/-/raw/experimentation/depHelper.gradle'
apply from: 'https://gitlab.com/supersaiyansubtlety/mod_gradle_scripts/-/raw/experimentation/extProps.gradle'
apply from: 'https://gitlab.com/supersaiyansubtlety/mod_gradle_scripts/-/raw/experimentation/repositories.gradle'
apply from: 'https://gitlab.com/supersaiyansubtlety/mod_gradle_scripts/-/raw/experimentation/publishing.gradle'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

version = project.mod_version + project.ext.mc_ver_suffix
archivesBaseName = project.ext.archives_base_name

group = project.maven_group

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:$project.ext.minecraft_version"
//	mappings "net.fabricmc:yarn:" + project.yarn_mappings
	mappings(loom.layered {
		addLayer(quiltMappings.mappings("org.quiltmc:quilt-mappings:$project.ext.minecraft_version+build.$project.quilt_build_number:v2"))
	})
	modImplementation "net.fabricmc:fabric-loader:$project.loader_version"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:$project.fabric_api_version"

	// GUI library
	bundledMod "io.github.cottonmc:LibGui:$project.libgui_version"

	//Config library
	requiredApi "me.shedaniel.cloth:cloth-config-fabric:$project.cloth_config_version"
	// Config menu support
	optionalMod true, "com.terraformersmc:modmenu:$project.modmenu_version"
	// translation fetching
	bundledMod "de.guntram.mcmod:crowdin-translate:$project.crowdin_translate_version"

	// speed up launching in dev
	devRuntime "com.github.astei:lazydfu:$project.lazy_dfu_version"
	devRuntime "net.oskarstrom:DashLoader:$project.dashloader_version"

	// remember window size+pos in dev
	devRuntime "net.dblsaiko:winwonders:$project.winwonders_version"
}

processResources {
	inputs.property "version", project.version
	inputs.property "mod_id", project.mod_id


	filesMatching("fabric.mod.json") {
		expand ([
				"version": project.version,

				"minecraft_version": project.ext.minecraft_semver,
				"min_minecraft_version": project.ext.min_minecraft_semver,
				"min_loader_version": project.min_loader_version,

				"mod_id": project.ext.mod_id,
				"ModId": project.ext.ModId,
				"mod_name": project.mod_name,
				"mod_description": project.mod_description,
				"mod_version": project.version,
				"maven_group": project.maven_group,
				"archives_base_name": project.ext.archives_base_name,
				"author": project.author,

				"min_fabric_api_version": project.min_fabric_api_version,

				"min_cloth_config_version": project.min_cloth_config_version,
				"modmenu_version": project.modmenu_version,
		])
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

